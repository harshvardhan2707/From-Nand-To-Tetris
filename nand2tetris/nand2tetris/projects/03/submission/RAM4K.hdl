// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
DMux8Way(in=load,a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h,sel=address[0..2]);
RAM512(in=in,address=address[3..11],load=a,out=outA);
RAM512(in=in,address=address[3..11],load=b,out=outB);
RAM512(in=in,address=address[3..11],load=c,out=outC);
RAM512(in=in,address=address[3..11],load=d,out=outD);
RAM512(in=in,address=address[3..11],load=e,out=outE);
RAM512(in=in,address=address[3..11],load=f,out=outF);
RAM512(in=in,address=address[3..11],load=g,out=outG);
RAM512(in=in,address=address[3..11],load=h,out=outH);
Mux8Way16(a=outA,b=outB,c=outC,d=outD,e=outE,f=outF,g=outG,h=outH,sel=address[0..2],out=out);
}